# vprism Financial Data Platform - Complete Docker Compose Configuration
version: '3.8'

services:
  # PostgreSQL 数据库
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: vprism
      POSTGRES_USER: vprism
      POSTGRES_PASSWORD: vprism_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U vprism -d vprism"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis 缓存
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # vprism API 服务
  vprism-api:
    build: 
      context: ../..
      dockerfile: vprism/docker/Dockerfile
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://vprism:vprism_password@postgres:5432/vprism
      - REDIS_URL=redis://redis:6379/0
      - LOG_LEVEL=INFO
      - ENVIRONMENT=docker
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ../../logs:/app/logs
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8000/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # vprism MCP 服务器
  mcp:
    build: 
      context: ../..
      dockerfile: vprism/docker/Dockerfile
    ports:
      - "8001:8001"
    environment:
      - DATABASE_URL=postgresql://vprism:vprism_password@postgres:5432/vprism
      - REDIS_URL=redis://redis:6379/1
      - LOG_LEVEL=INFO
      - ENVIRONMENT=docker
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: ["python", "-m", "vprism.mcp", "--transport", "http", "--host", "0.0.0.0", "--port", "8001"]
    volumes:
      - ../../logs:/app/logs
    restart: unless-stopped

  # 数据收集服务
  data-collector:
    build: 
      context: ../..
      dockerfile: vprism/docker/Dockerfile
    environment:
      - DATABASE_URL=postgresql://vprism:vprism_password@postgres:5432/vprism
      - REDIS_URL=redis://redis:6379/2
      - LOG_LEVEL=INFO
      - ENVIRONMENT=docker
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: ["python", "-m", "vprism.core.data.collection", "collect", "--schedule", "*/5 * * * *"]
    volumes:
      - ../../logs:/app/logs
    restart: unless-stopped

  # Nginx 反向代理
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - vprism-api
      - mcp
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  default:
    driver: bridge